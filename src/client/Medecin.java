/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.lang.reflect.InvocationTargetException;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author belma
 */
public class Medecin extends javax.swing.JFrame {

    /**
     * Creates new form Medecin
     */
    public Medecin() {
        setIconImage(new ImageIcon(getClass().getResource("/icons/applogo.png")).getImage());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        analyse = new javax.swing.JButton();
        stock = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        analyse2 = new javax.swing.JButton();
        stock2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        minimize = new javax.swing.JButton();
        colse = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuickLab");
        setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 98, 166));
        jPanel4.setPreferredSize(new java.awt.Dimension(320, 1000));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        analyse.setBackground(new java.awt.Color(0, 105, 170));
        analyse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        analyse.setForeground(new java.awt.Color(255, 255, 255));
        analyse.setText("Gestion d'analyse");
        analyse.setToolTipText("");
        analyse.setBorder(null);
        analyse.setBorderPainted(false);
        analyse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        analyse.setDoubleBuffered(true);
        analyse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        analyse.setIconTextGap(50);
        analyse.setName(""); // NOI18N
        analyse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        analyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyseActionPerformed(evt);
            }
        });
        jPanel4.add(analyse, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 320, 70));
        analyse.setFocusPainted(false);
        analyse.setBorderPainted(false);
        analyse.setContentAreaFilled(false);
        analyse.setOpaque(true);

        analyse.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                analyse.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                analyse.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
            }
        });

        stock.setBackground(new java.awt.Color(0, 105, 170));
        stock.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        stock.setForeground(new java.awt.Color(255, 255, 255));
        stock.setText("Verifier l'état de Stock");
        stock.setBorder(null);
        stock.setBorderPainted(false);
        stock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stock.setDoubleBuffered(true);
        stock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stock.setIconTextGap(50);
        stock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });
        jPanel4.add(stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 320, 70));
        stock.setFocusPainted(false);
        stock.setBorderPainted(false);
        stock.setContentAreaFilled(false);
        stock.setOpaque(true);

        stock.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                stock.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                stock.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 105, 170));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Consulter Dossier Patient");
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setDoubleBuffered(true);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setIconTextGap(50);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 320, 70));
        jButton7.setFocusPainted(false);
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setOpaque(true);

        jButton7.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                jButton7.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jButton7.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
            }
        });

        home.setBackground(new java.awt.Color(0, 120, 200));
        home.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Accueil");
        home.setToolTipText("");
        home.setBorder(null);
        home.setBorderPainted(false);
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.setDoubleBuffered(true);
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.setIconTextGap(50);
        home.setName(""); // NOI18N
        home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        jPanel4.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 320, 70));
        home.setFocusPainted(false);
        home.setBorderPainted(false);
        home.setContentAreaFilled(false);
        home.setOpaque(true);

        home.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                home.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                home.setBackground(new Color(0, 120, 200)); // Original color when mouse not hovering
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Médecin");
        jLabel4.setMaximumSize(new java.awt.Dimension(100, 16));
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 320, -1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-user-100.png"))); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 0, 150, 150));

        logout.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        logout.setForeground(new java.awt.Color(0, 115, 194));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-log-out-30.png"))); // NOI18N
        logout.setText("Déconnexion");
        logout.setBorder(null);
        logout.setBorderPainted(false);
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.setDoubleBuffered(true);
        logout.setIconTextGap(5);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel4.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 901, 220, 60));
        logout.setFocusPainted(false);
        logout.setBorderPainted(false);
        logout.setContentAreaFilled(false);
        logout.setOpaque(true);
        logout.setBackground(new Color(255, 255, 255)); // Set default background to white

        logout.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                logout.setBackground(new Color(240,240,240)); // Change to light gray on hover
            }

            @Override
            public void mouseExited(MouseEvent e) {
                logout.setBackground(new Color(255, 255, 255)); // Revert to white when not hovered
            }
        });

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 320, 1000));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setMinimumSize(new java.awt.Dimension(1600, 1000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-home-55.png"))); // NOI18N
        jLabel14.setText("Accueil");
        jLabel14.setIconTextGap(20);
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 680, 60));

        analyse2.setBackground(new java.awt.Color(0, 115, 194));
        analyse2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        analyse2.setForeground(new java.awt.Color(255, 255, 255));
        analyse2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-lab-items-100.png"))); // NOI18N
        analyse2.setText("Gestion d'analyse");
        analyse2.setToolTipText("");
        analyse2.setBorder(null);
        analyse2.setBorderPainted(false);
        analyse2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        analyse2.setDoubleBuffered(true);
        analyse2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        analyse2.setIconTextGap(50);
        analyse2.setName(""); // NOI18N
        analyse2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        analyse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyse2ActionPerformed(evt);
            }
        });
        jPanel1.add(analyse2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 400, 400));
        analyse2.setFocusPainted(false);
        analyse2.setBorderPainted(false);
        analyse2.setContentAreaFilled(false);
        analyse2.setOpaque(true);

        analyse2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                analyse2.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                analyse2.setBackground(new Color(0, 115, 194)); // Original color when mouse not hovering
            }
        });

        stock2.setBackground(new java.awt.Color(0, 115, 194));
        stock2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        stock2.setForeground(new java.awt.Color(255, 255, 255));
        stock2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-inventory-100.png"))); // NOI18N
        stock2.setText("Verifier l'état de Stock");
        stock2.setBorder(null);
        stock2.setBorderPainted(false);
        stock2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stock2.setDoubleBuffered(true);
        stock2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stock2.setIconTextGap(50);
        stock2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        stock2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock2ActionPerformed(evt);
            }
        });
        jPanel1.add(stock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 400, 400));
        stock2.setFocusPainted(false);
        stock2.setBorderPainted(false);
        stock2.setContentAreaFilled(false);
        stock2.setOpaque(true);

        stock2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                stock2.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                stock2.setBackground(new Color(0, 115, 194)); // Original color when mouse not hovering
            }
        });

        jButton10.setBackground(new java.awt.Color(0, 115, 194));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-medical-history-100.png"))); // NOI18N
        jButton10.setText("Consulter Dossier Patient");
        jButton10.setBorder(null);
        jButton10.setBorderPainted(false);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.setDoubleBuffered(true);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setIconTextGap(50);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 300, 400, 400));
        jButton10.setFocusPainted(false);
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setOpaque(true);

        jButton10.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                jButton10.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jButton10.setBackground(new Color(0, 115, 194)); // Original color when mouse not hovering
            }
        });

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 1600, 1000));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minimize.setBackground(new java.awt.Color(0, 0, 0));
        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-minimize-30.png"))); // NOI18N
        minimize.setBorder(null);
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });
        jPanel2.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1820, 0, 40, 40));
        minimize.setFocusPainted(false);
        minimize.setBorderPainted(false);
        minimize.setContentAreaFilled(false);
        minimize.setOpaque(true);

        minimize.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                minimize.setBackground(new Color(20,20,20)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                minimize.setBackground(new Color(0, 0,0)); // Original color when mouse not hovering
            }
        });

        colse.setBackground(new java.awt.Color(0, 0, 0));
        colse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-close-30.png"))); // NOI18N
        colse.setBorder(null);
        colse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        colse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colseActionPerformed(evt);
            }
        });
        jPanel2.add(colse, new org.netbeans.lib.awtextra.AbsoluteConstraints(1870, 0, 40, 40));
        colse.setFocusPainted(false);
        colse.setBorderPainted(false);
        colse.setContentAreaFilled(false);
        colse.setOpaque(true);

        colse.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                colse.setBackground(new Color(20,20,20)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                colse.setBackground(new Color(0, 0,0)); // Original color when mouse not hovering
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("QuickLab");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 320, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 40));

        setSize(new java.awt.Dimension(1920, 1040));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void analyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseActionPerformed
        smoothTransition("client.Gérer_Analyse_Medicale", 1000);
    }//GEN-LAST:event_analyseActionPerformed

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        smoothTransition("client.Produit", 1000, "medecin");

    }//GEN-LAST:event_stockActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed

          smoothTransition("client.Medecin", 500);


    }//GEN-LAST:event_homeActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        smoothTransition("client.Dossier", 1000, "medecin");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void analyse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyse2ActionPerformed

        smoothTransition("client.Gérer_Analyse_Medicale", 1000);

    }//GEN-LAST:event_analyse2ActionPerformed

    private void stock2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock2ActionPerformed
        smoothTransition("client.Produit", 1000, "medecin");

    }//GEN-LAST:event_stock2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        smoothTransition("client.Dossier", 1000, "medecin");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        setExtendedState(getExtendedState() | Gérer_Analyse_Medicale.ICONIFIED);
    }//GEN-LAST:event_minimizeActionPerformed

    private void colseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colseActionPerformed

        System.exit(0);
    }//GEN-LAST:event_colseActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed
    
     public static void openProduit(){
    // Open Gerant frame
    
    java.awt.EventQueue.invokeLater(() -> {
        new Produit("medecin").setVisible(true);
    });
     }
    
    public static void openGérerAnalyseMedicale(){
    // Open Gerant frame
    java.awt.EventQueue.invokeLater(() -> {
        new Gérer_Analyse_Medicale().setVisible(true);
    });
     }
    
//By: OussamaDeV


private void smoothTransition(String windowName, int delayMilliseconds) {
    // Initialize the Timer outside the EventQueue.invokeLater call
    Timer timer = new Timer(delayMilliseconds, null);

    java.awt.EventQueue.invokeLater(() -> {
        try {
            // Dynamically create an instance of the specified window class
            Class<?> clazz = Class.forName(windowName);
            java.awt.Window window = (java.awt.Window) clazz.getDeclaredConstructor().newInstance();
            
            // Make the window visible
            window.setVisible(true);

            // Update the Timer's ActionListener here
            timer.addActionListener((e) -> {
                // Hide the current window after the delay
                setVisible(false);
                
                // Stop the Timer
                timer.stop();
            });

            // Start the Timer
            timer.start();
        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException ex) {
            // Handle any exceptions
            ex.printStackTrace();
        }
    });
}
    
    
private void smoothTransition(String windowName, int delayMilliseconds, Object... constructorArgs) {
    // Initialize the Timer outside the EventQueue.invokeLater call
    Timer timer = new Timer(delayMilliseconds, null);

    java.awt.EventQueue.invokeLater(() -> {
        try {
            // Dynamically create an instance of the specified window class
            Class<?> clazz = Class.forName(windowName);
            // Determine parameter types from constructorArgs
            Class<?>[] parameterTypes = new Class<?>[constructorArgs.length];
            for (int i = 0; i < constructorArgs.length; i++) {
                parameterTypes[i] = constructorArgs[i].getClass();
            }
            java.awt.Window window = (java.awt.Window) clazz.getDeclaredConstructor(parameterTypes).newInstance(constructorArgs);
            
            // Make the window visible
            window.setVisible(true);

            // Update the Timer's ActionListener here
            timer.addActionListener((e) -> {
                // Hide the current window after the delay
                setVisible(false);
                
                // Stop the Timer
                timer.stop();
            });

            // Start the Timer
            timer.start();
        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException ex) {
            // Handle any exceptions
            ex.printStackTrace();
        }
    });
}    
    
    
    
    /**
     * @param args the command line arguments
     */
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medecin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analyse;
    private javax.swing.JButton analyse2;
    private javax.swing.JButton colse;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton logout;
    private javax.swing.JButton minimize;
    private javax.swing.JButton stock;
    private javax.swing.JButton stock2;
    // End of variables declaration//GEN-END:variables
}
