/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.lang.reflect.InvocationTargetException;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.table.DefaultTableCellRenderer;



import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author BIG-INFOPHONE
 */
public class Ajouter_Patient extends javax.swing.JFrame {
    DefaultTableModel model;

    /**
     * Creates new form Ajouter_Patient
     */
       public Ajouter_Patient() {
        setIconImage(new ImageIcon(getClass().getResource("/icons/applogo.png")).getImage());
        initComponents();
        obligatoire.setVisible(false);
        obligatoire1.setVisible(false);
        obligatoire2.setVisible(false);
        obligatoire3.setVisible(false);
        obligatoire4.setVisible(false);
        obligatoire5.setVisible(false);
        initTable();
        loadPatientData();
        attachMouseListener();
        hidemodifydeletebutton();
       
    }
    
   private void initTable() {
        model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 7 ? Boolean.class : String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 7; // Only the checkbox column is editable
            }
        };

        model.addColumn("ID");
        model.addColumn("Nom");
        model.addColumn("Prenom");
        model.addColumn("Date_naissance");
        model.addColumn("Sexe");
        model.addColumn("Email");
        model.addColumn("Num_telephone");

        jTable2.setModel(model);
    }
    
    
     private void attachMouseListener() {
        this.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameMousePressed(evt);
            }
        });
    }
     
     private void frameMousePressed(java.awt.event.MouseEvent evt) {
        // Check if the source of the event is not jTable2 and not jButton1
        if (evt.getSource() != jTable2 && evt.getSource() != ajouter) {
            ajouter.setVisible(true);
            hidemodifydeletebutton();
        }
    }
     
     private void hidemodifydeletebutton(){
        modifier.setVisible(false);
        supprimer.setVisible(false);
    }
     
     
  private void performSearchAndUpdateTable(String firstName, String lastName) {
    model.setRowCount(0);

    String searchData = Client.searchPatientByName(firstName, lastName);
    if (searchData == null || searchData.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "No patients found with the provided search terms.", "No Results", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Split each row of data
    String[] rows = searchData.split(";");
    for (String row : rows) {
        // Split each column of data
        String[] data = row.split(":");

        // Ensure there is data for each column
        if (data.length == 7) { // Assuming there are 6 columns
            Object[] tableRow = new Object[7];
            tableRow[0] = data[0]; // ID
            tableRow[1] = data[1]; // First Name
            tableRow[2] = data[2]; // Last Name
            tableRow[3] = data[3]; // Date of Birth
            tableRow[4] = data[4]; // Gender
            tableRow[5] = data[5]; // Email
            tableRow[6] = data[6]; // Phone Number

            model.addRow(tableRow);
        }
    }
}


     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        minimize = new javax.swing.JButton();
        colse = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nom = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        sexe = new javax.swing.JComboBox<>();
        email = new javax.swing.JTextField();
        Num = new javax.swing.JTextField();
        ajouter = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        find = new javax.swing.JButton();
        rech = new javax.swing.JTextField();
        obligatoire5 = new javax.swing.JLabel();
        obligatoire = new javax.swing.JLabel();
        obligatoire1 = new javax.swing.JLabel();
        obligatoire2 = new javax.swing.JLabel();
        obligatoire3 = new javax.swing.JLabel();
        obligatoire4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        gererpatients = new javax.swing.JButton();
        gererdossier = new javax.swing.JButton();
        gererrndv = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        gererbilan = new javax.swing.JButton();
        gerercaisse = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuickLab");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1920, 1040));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 161, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minimize.setBackground(new java.awt.Color(0, 0, 0));
        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-minimize-30.png"))); // NOI18N
        minimize.setBorder(null);
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });
        jPanel2.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1820, 0, 40, 40));
        minimize.setFocusPainted(false);
        minimize.setBorderPainted(false);
        minimize.setContentAreaFilled(false);
        minimize.setOpaque(true);

        minimize.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                minimize.setBackground(new Color(20,20,20)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                minimize.setBackground(new Color(0, 0,0)); // Original color when mouse not hovering
            }
        });

        colse.setBackground(new java.awt.Color(0, 0, 0));
        colse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-close-30.png"))); // NOI18N
        colse.setBorder(null);
        colse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        colse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colseActionPerformed(evt);
            }
        });
        jPanel2.add(colse, new org.netbeans.lib.awtextra.AbsoluteConstraints(1870, 0, 40, 40));
        colse.setFocusPainted(false);
        colse.setBorderPainted(false);
        colse.setContentAreaFilled(false);
        colse.setOpaque(true);

        colse.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                colse.setBackground(new Color(20,20,20)); // Darker blue when mouse hovers
            }

            @Override
            public void mouseExited(MouseEvent e) {
                colse.setBackground(new Color(0, 0,0)); // Original color when mouse not hovering
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("QuickLab");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 320, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBackground(new java.awt.Color(0, 115, 194));
        jScrollPane2.setBorder(null);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBackground(new java.awt.Color(213, 234, 255));
        jTable2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.setFillsViewportHeight(true);
        jTable2.setFocusCycleRoot(true);
        jTable2.setFocusTraversalPolicyProvider(true);
        jTable2.setGridColor(new java.awt.Color(213, 234, 255));
        jTable2.setRowHeight(30);
        jTable2.setSelectionBackground(new java.awt.Color(0, 115, 194));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.setFont(new Font("Segoe UI", Font.BOLD, 14)); // Font for body
        jTable2.setBackground(new Color(213, 234, 255)); // Background color for body
        jTable2.setRowHeight(25);
        jTable2.setSelectionBackground(new Color(0, 115, 194)); // Selection background color
        jTable2.setSelectionForeground(Color.BLACK); // Selection text color

        // Header styling
        JTableHeader header = jTable2.getTableHeader();
        header.setBackground(new Color(0, 115, 194)); // Background color for header
        header.setForeground(Color.BLACK); // Text color for header
        header.setFont(new Font("Segoe UI", Font.BOLD, 16)); // Font for header

        // Centering header text
        ((DefaultTableCellRenderer)header.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        // Custom cell rendering for body
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        centerRenderer.setBackground(new Color(213, 234, 255));
        jTable2.setDefaultRenderer(Object.class, centerRenderer);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 910, 440));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Les Informations De Patient");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 460, 42));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Nom ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 50, 35));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Prenom");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 70, 35));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Date de naissance");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 160, 35));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Sexe");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, -1, 35));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Email");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 50, 35));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Numero de telephone");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 640, 190, 35));

        nom.setBackground(new java.awt.Color(213, 234, 255));
        nom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nom.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nom.setBorder(null);
        jPanel1.add(nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 340, 40));
        nom.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
            BorderFactory.createEmptyBorder(5, 10, 5, 10)));

    prenom.setBackground(new java.awt.Color(213, 234, 255));
    prenom.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    prenom.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    prenom.setBorder(null);
    jPanel1.add(prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 340, 40));
    prenom.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
        BorderFactory.createEmptyBorder(5, 10, 5, 10)));

date.setBackground(new java.awt.Color(213, 234, 255));
date.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
date.setHorizontalAlignment(javax.swing.JTextField.LEFT);
date.setBorder(null);
date.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        dateActionPerformed(evt);
    }
    });
    jPanel1.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 340, 40));
    date.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
        BorderFactory.createEmptyBorder(5, 10, 5, 10)));

sexe.setBackground(new java.awt.Color(213, 234, 255));
sexe.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
sexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sexe", "M", "F" }));
sexe.setBorder(null);
sexe.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        sexeActionPerformed(evt);
    }
    });
    jPanel1.add(sexe, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 510, 340, 40));
    sexe.setRenderer(new CustomComboBoxRenderer());
    sexe.setPreferredSize(new Dimension(340, 40)); // Set the preferred size of the JComboBox
    sexe.setBackground(new Color(213, 234, 255)); // Set the background color of the JComboBox
    sexe.setFont(new Font("Segoe UI", Font.BOLD, 16)); // Set the font of the JComboBox

    email.setBackground(new java.awt.Color(213, 234, 255));
    email.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    email.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    email.setBorder(null);
    email.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            emailActionPerformed(evt);
        }
    });
    jPanel1.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 590, 340, 40));
    email.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
        BorderFactory.createEmptyBorder(5, 10, 5, 10)));

Num.setBackground(new java.awt.Color(213, 234, 255));
Num.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
Num.setHorizontalAlignment(javax.swing.JTextField.LEFT);
Num.setBorder(null);
Num.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        NumActionPerformed(evt);
    }
    });
    jPanel1.add(Num, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 670, 340, 40));
    Num.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
        BorderFactory.createEmptyBorder(5, 10, 5, 10)));

ajouter.setBackground(new java.awt.Color(0, 115, 194));
ajouter.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
ajouter.setForeground(new java.awt.Color(255, 255, 255));
ajouter.setText("AJOUTER");
ajouter.setBorder(null);
ajouter.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        ajouterActionPerformed(evt);
    }
    });
    jPanel1.add(ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 820, 340, 70));
    ajouter.setFocusPainted(false);
    ajouter.setBorderPainted(false);
    ajouter.setContentAreaFilled(false);
    ajouter.setOpaque(true);
    ajouter.setBackground(new Color(0, 115, 194)); // Set default background to white

    ajouter.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            ajouter.setBackground(new Color(23,142,224)); // Change to light gray on hover
        }

        @Override
        public void mouseExited(MouseEvent e) {
            ajouter.setBackground(new Color(0, 115, 194)); // Revert to white when not hovered
        }
    });

    modifier.setBackground(new java.awt.Color(0, 115, 194));
    modifier.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    modifier.setForeground(new java.awt.Color(255, 255, 255));
    modifier.setText("MODIFIER");
    modifier.setBorder(null);
    modifier.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            modifierActionPerformed(evt);
        }
    });
    jPanel1.add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 820, 340, 70));
    modifier.setFocusPainted(false);
    modifier.setBorderPainted(false);
    modifier.setContentAreaFilled(false);
    modifier.setOpaque(true);
    modifier.setBackground(new Color(0, 115, 194)); // Set default background to white

    modifier.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            modifier.setBackground(new Color(23,142,224)); // Change to light gray on hover
        }

        @Override
        public void mouseExited(MouseEvent e) {
            modifier.setBackground(new Color(0, 115, 194)); // Revert to white when not hovered
        }
    });

    supprimer.setBackground(new java.awt.Color(0, 115, 194));
    supprimer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    supprimer.setForeground(new java.awt.Color(255, 255, 255));
    supprimer.setText("SUPPRIMER");
    supprimer.setBorder(null);
    supprimer.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            supprimerActionPerformed(evt);
        }
    });
    jPanel1.add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 820, 340, 70));
    supprimer.setFocusPainted(false);
    supprimer.setBorderPainted(false);
    supprimer.setContentAreaFilled(false);
    supprimer.setOpaque(true);
    supprimer.setBackground(new Color(0, 115, 194)); // Set default background to white

    supprimer.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            supprimer.setBackground(new Color(23,142,224)); // Change to light gray on hover
        }

        @Override
        public void mouseExited(MouseEvent e) {
            supprimer.setBackground(new Color(0, 115, 194)); // Revert to white when not hovered
        }
    });

    jLabel15.setBackground(new java.awt.Color(255, 255, 255));
    jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
    jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-user-account-55.png"))); // NOI18N
    jLabel15.setText("Gérer Patients");
    jLabel15.setIconTextGap(20);
    jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 680, 60));

    jPanel3.setBackground(new java.awt.Color(213, 234, 255));
    jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    find.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    find.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-search-client-25.png"))); // NOI18N
    find.setText("RECHERCHER");
    find.setBorder(null);
    find.setIconTextGap(10);
    find.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            findActionPerformed(evt);
        }
    });
    jPanel3.add(find, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 180, 40));
    find.setFocusPainted(false);
    find.setBorderPainted(false);
    find.setContentAreaFilled(false);
    find.setOpaque(true);
    find.setBackground(new Color(255, 255, 255)); // Set default background to white

    find.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            find.setBackground(new Color(240,240,240)); // Change to light gray on hover
        }

        @Override
        public void mouseExited(MouseEvent e) {
            find.setBackground(new Color(255, 255, 255)); // Revert to white when not hovered
        }
    });

    rech.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
    rech.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    rech.setBorder(null);
    rech.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
    rech.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            rechActionPerformed(evt);
        }
    });
    jPanel3.add(rech, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 300, 40));
    rech.setBorder(BorderFactory.createCompoundBorder(
        BorderFactory.createMatteBorder(0, 0, 0, 0, Color.WHITE),
        BorderFactory.createEmptyBorder(5, 10, 5, 10)));

jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 710, 910, 60));

obligatoire5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire5.setForeground(new java.awt.Color(204, 0, 0));
obligatoire5.setText("*");
jPanel1.add(obligatoire5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 640, 10, 20));

obligatoire.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire.setForeground(new java.awt.Color(204, 0, 0));
obligatoire.setText("*");
jPanel1.add(obligatoire, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 10, 20));

obligatoire1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire1.setForeground(new java.awt.Color(204, 0, 0));
obligatoire1.setText("*");
jPanel1.add(obligatoire1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 10, 20));

obligatoire2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire2.setForeground(new java.awt.Color(204, 0, 0));
obligatoire2.setText("*");
jPanel1.add(obligatoire2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 10, 20));

obligatoire3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire3.setForeground(new java.awt.Color(204, 0, 0));
obligatoire3.setText("*");
jPanel1.add(obligatoire3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 10, 20));

obligatoire4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
obligatoire4.setForeground(new java.awt.Color(204, 0, 0));
obligatoire4.setText("*");
jPanel1.add(obligatoire4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 10, 20));

getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 1600, 1000));

jPanel4.setBackground(new java.awt.Color(0, 98, 166));
jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

gererpatients.setBackground(new java.awt.Color(0, 120, 200));
gererpatients.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
gererpatients.setForeground(new java.awt.Color(255, 255, 255));
gererpatients.setText("Gérer Patients");
gererpatients.setToolTipText("");
gererpatients.setBorder(null);
gererpatients.setBorderPainted(false);
gererpatients.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
gererpatients.setDoubleBuffered(true);
gererpatients.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
gererpatients.setIconTextGap(50);
gererpatients.setName(""); // NOI18N
gererpatients.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
gererpatients.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        gererpatientsActionPerformed(evt);
    }
    });
    jPanel4.add(gererpatients, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 320, 70));
    gererpatients.setFocusPainted(false);
    gererpatients.setBorderPainted(false);
    gererpatients.setContentAreaFilled(false);
    gererpatients.setOpaque(true);

    gererpatients.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            gererpatients.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            gererpatients.setBackground(new Color(0,120,200)); // Original color when mouse not hovering
        }
    });

    gererdossier.setBackground(new java.awt.Color(0, 105, 170));
    gererdossier.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    gererdossier.setForeground(new java.awt.Color(255, 255, 255));
    gererdossier.setText("Gérer Dossier Patients");
    gererdossier.setBorder(null);
    gererdossier.setBorderPainted(false);
    gererdossier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    gererdossier.setDoubleBuffered(true);
    gererdossier.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gererdossier.setIconTextGap(50);
    gererdossier.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    gererdossier.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gererdossierActionPerformed(evt);
        }
    });
    jPanel4.add(gererdossier, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 320, 70));
    gererdossier.setFocusPainted(false);
    gererdossier.setBorderPainted(false);
    gererdossier.setContentAreaFilled(false);
    gererdossier.setOpaque(true);

    gererdossier.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            gererdossier.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            gererdossier.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
        }
    });

    gererrndv.setBackground(new java.awt.Color(0, 105, 170));
    gererrndv.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    gererrndv.setForeground(new java.awt.Color(255, 255, 255));
    gererrndv.setText("Gérer Rendez-Vous");
    gererrndv.setBorder(null);
    gererrndv.setBorderPainted(false);
    gererrndv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    gererrndv.setDoubleBuffered(true);
    gererrndv.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gererrndv.setIconTextGap(50);
    gererrndv.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    gererrndv.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gererrndvActionPerformed(evt);
        }
    });
    jPanel4.add(gererrndv, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 320, 70));
    gererrndv.setFocusPainted(false);
    gererrndv.setBorderPainted(false);
    gererrndv.setContentAreaFilled(false);
    gererrndv.setOpaque(true);

    gererrndv.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            gererrndv.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            gererrndv.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
        }
    });

    home.setBackground(new java.awt.Color(0, 105, 170));
    home.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    home.setForeground(new java.awt.Color(255, 255, 255));
    home.setText("Accueil");
    home.setToolTipText("");
    home.setBorder(null);
    home.setBorderPainted(false);
    home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    home.setDoubleBuffered(true);
    home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    home.setIconTextGap(50);
    home.setName(""); // NOI18N
    home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    home.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            homeActionPerformed(evt);
        }
    });
    jPanel4.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 320, 70));
    home.setFocusPainted(false);
    home.setBorderPainted(false);
    home.setContentAreaFilled(false);
    home.setOpaque(true);

    home.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            home.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            home.setBackground(new Color(0,105,170)); // Original color when mouse not hovering
        }
    });

    jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel13.setText("Receptionniste");
    jLabel13.setMaximumSize(new java.awt.Dimension(100, 16));
    jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 320, -1));

    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-user-100.png"))); // NOI18N
    jLabel14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
    jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 0, 150, 150));

    gererbilan.setBackground(new java.awt.Color(0, 105, 170));
    gererbilan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    gererbilan.setForeground(new java.awt.Color(255, 255, 255));
    gererbilan.setText("Gérer Les Bilans");
    gererbilan.setBorder(null);
    gererbilan.setBorderPainted(false);
    gererbilan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    gererbilan.setDoubleBuffered(true);
    gererbilan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gererbilan.setIconTextGap(50);
    gererbilan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    gererbilan.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gererbilanActionPerformed(evt);
        }
    });
    jPanel4.add(gererbilan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 650, 320, 70));
    gererbilan.setFocusPainted(false);
    gererbilan.setBorderPainted(false);
    gererbilan.setContentAreaFilled(false);
    gererbilan.setOpaque(true);

    gererbilan.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            gererbilan.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            gererbilan.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
        }
    });

    gerercaisse.setBackground(new java.awt.Color(0, 105, 170));
    gerercaisse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    gerercaisse.setForeground(new java.awt.Color(255, 255, 255));
    gerercaisse.setText("Gérer La Caisse");
    gerercaisse.setBorder(null);
    gerercaisse.setBorderPainted(false);
    gerercaisse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    gerercaisse.setDoubleBuffered(true);
    gerercaisse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gerercaisse.setIconTextGap(50);
    gerercaisse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    gerercaisse.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gerercaisseActionPerformed(evt);
        }
    });
    jPanel4.add(gerercaisse, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 750, 320, 70));
    gerercaisse.setFocusPainted(false);
    gerercaisse.setBorderPainted(false);
    gerercaisse.setContentAreaFilled(false);
    gerercaisse.setOpaque(true);

    gerercaisse.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            gerercaisse.setBackground(new Color(23,142,224)); // Darker blue when mouse hovers
        }

        @Override
        public void mouseExited(MouseEvent e) {
            gerercaisse.setBackground(new Color(0, 105, 170)); // Original color when mouse not hovering
        }
    });

    logout.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
    logout.setForeground(new java.awt.Color(0, 115, 194));
    logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gerant icons/icons8-log-out-30.png"))); // NOI18N
    logout.setText("Déconnexion");
    logout.setBorder(null);
    logout.setBorderPainted(false);
    logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    logout.setDoubleBuffered(true);
    logout.setIconTextGap(5);
    logout.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            logoutActionPerformed(evt);
        }
    });
    jPanel4.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 901, 220, 60));
    logout.setFocusPainted(false);
    logout.setBorderPainted(false);
    logout.setContentAreaFilled(false);
    logout.setOpaque(true);
    logout.setBackground(new Color(255, 255, 255)); // Set default background to white

    logout.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseEntered(MouseEvent e) {
            logout.setBackground(new Color(240,240,240)); // Change to light gray on hover
        }

        @Override
        public void mouseExited(MouseEvent e) {
            logout.setBackground(new Color(255, 255, 255)); // Revert to white when not hovered
        }
    });

    getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 320, 1000));

    setSize(new java.awt.Dimension(1920, 1040));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexeActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
          
          int selectedRow = jTable2.getSelectedRow();
          
    if (selectedRow >= 0) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        String email = model.getValueAt(selectedRow, 4).toString();  // Assuming email is the unique identifier and is in column 5
        Client.deletePatient(email);
        model.removeRow(selectedRow);  // Optionally remove the row from the table view
        clearInputFields();
    } else {
        JOptionPane.showMessageDialog(this, "No user selected", "Error", JOptionPane.ERROR_MESSAGE);
         System.out.println("Model is not initialized");
    }                                 


    }//GEN-LAST:event_supprimerActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed

      String nomValue = nom.getText();
        String prenomValue = prenom.getText();
        String dateValue = date.getText();
        String sexeValue = sexe.getSelectedItem().toString();
        String emailValue = email.getText();
        String NumValue = Num.getText();
         
        
        
        if (nomValue.trim().isEmpty()) {
        
        obligatoire.setVisible(true);
         // Stop further execution if nom is empty
    }else{
         obligatoire.setVisible(false);
        
    }
    if (prenomValue.trim().isEmpty()) {
        
        obligatoire1.setVisible(true);
         // Stop further execution if nom is empty
    }else{
         obligatoire1.setVisible(false);
        
    }
    if (dateValue.trim().isEmpty()) {
        
        obligatoire2.setVisible(true);
         // Stop further execution if nom is empty
    }else{
         obligatoire2.setVisible(false);
        
    }
    if (sexe.getSelectedIndex() == 0) {
        
        obligatoire3.setVisible(true);
        // Stop further execution if nom is empty
    }
    if (emailValue.trim().isEmpty()) {
        
        obligatoire4.setVisible(true);
         // Stop further execution if nom is empty
    }else{
         obligatoire4.setVisible(false);
        
    }
    if (NumValue.trim().isEmpty()) {
        
        obligatoire5.setVisible(true);
         // Stop further execution if nom is empty
    }else{
         obligatoire5.setVisible(false);
        
    }
    
    
    ////////////////////////////////////////////////////////////
    
     if (sexe.getSelectedIndex()>0 ) {
        
        obligatoire3.setVisible(false);
        // Stop further execution if nom is empty
    }
         
     if(!nomValue.trim().isEmpty() && !prenomValue.trim().isEmpty() && !dateValue.trim().isEmpty() && sexe.getSelectedIndex() >0  && !emailValue.trim().isEmpty() && !NumValue.trim().isEmpty()   ){
            
        Client.sendPatientInfo(nomValue, prenomValue, dateValue, sexeValue, emailValue, NumValue);
        
        JOptionPane.showMessageDialog(null, "Patient ajouté avec succès", "Succès", JOptionPane.INFORMATION_MESSAGE);
        
         // Update the user in the table model by adding a new row
         loadPatientDataQuandAjouter();
         
         
          // Clear the input fields after adding the user to the table
           clearInputFields();
        
        
         }
    }//GEN-LAST:event_ajouterActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed

        int selectedRow = jTable2.getSelectedRow();
    if (selectedRow >= 0) {
        String nomValue = nom.getText();
        String prenomValue = prenom.getText();
        String dateValue = date.getText();
        String sexeValue = sexe.getSelectedItem().toString();
        String emailValue = email.getText();
        String NumValue = Num.getText();
        
        if(!nomValue.trim().isEmpty() && !prenomValue.trim().isEmpty() && !dateValue.trim().isEmpty() && sexe.getSelectedIndex() >0  && !emailValue.trim().isEmpty() && !NumValue.trim().isEmpty()   ){
            
       Client.updatePatient(nomValue, prenomValue, dateValue, sexeValue, emailValue, NumValue);
        
        JOptionPane.showMessageDialog(null, "Patient Modifier avec succès", "Succès", JOptionPane.INFORMATION_MESSAGE);
        
           // Update the user in the table model
        model.setValueAt(nomValue, selectedRow, 1);
        model.setValueAt(prenomValue, selectedRow, 2);
        model.setValueAt(dateValue, selectedRow, 3);
        model.setValueAt(sexeValue, selectedRow, 4);
        model.setValueAt(emailValue, selectedRow, 5);
        model.setValueAt(NumValue, selectedRow, 6);
        
       
        jTable2.clearSelection();
        clearInputFields();
        
         }

        
        
    
    } else {
        JOptionPane.showMessageDialog(this, "No user selected", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_modifierActionPerformed

    private void rechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
                                    
    // Get the full search term and split it to obtain first name and last name
    String searchTerm = rech.getText().trim();
    if (searchTerm.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter both first name and last name.", "No Search Term", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    String[] names = searchTerm.split("\\s+" ,2);  // Splits the string into parts by whitespace
    if (names.length < 2) {
        JOptionPane.showMessageDialog(this, "Please enter both first name and last name separated by space.", "Incomplete Data", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Assuming the first part is the first name and the second part is the last name
    String firstName = names[0];
    String lastName = names[1];

    // Perform the search and update the table
    performSearchAndUpdateTable(firstName, lastName);
                                     


    }//GEN-LAST:event_findActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MousePressed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
  // TODO add your handling code here:
        //@ by Yahya Mati
        int i = jTable2.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        nom.setText(model.getValueAt(i, 1).toString());
        prenom.setText(model.getValueAt(i, 2).toString());
        date.setText(model.getValueAt(i, 3).toString());
        sexe.setSelectedItem(model.getValueAt(i, 4).toString());
        email.setText(model.getValueAt(i, 5).toString());
        Num.setText(model.getValueAt(i, 6).toString());
       
        
        // Hide the OK button when a row is selected
        ajouter.setVisible(false);
        modifier.setVisible(true);
        supprimer.setVisible(true);
    

    }//GEN-LAST:event_jTable2MouseReleased

    private void NumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumActionPerformed

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        setExtendedState(getExtendedState() | Gérer_Analyse_Medicale.ICONIFIED);
    }//GEN-LAST:event_minimizeActionPerformed

    private void colseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colseActionPerformed

        System.exit(0);
    }//GEN-LAST:event_colseActionPerformed

    private void gererpatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gererpatientsActionPerformed
        smoothTransition("client.Ajouter_Patient", 1000);
    }//GEN-LAST:event_gererpatientsActionPerformed

    private void gererdossierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gererdossierActionPerformed
        smoothTransition("client.Dossier", 1000);
    }//GEN-LAST:event_gererdossierActionPerformed

    private void gererrndvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gererrndvActionPerformed
        smoothTransition("client.Rendez_vous", 1000);
    }//GEN-LAST:event_gererrndvActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed

        smoothTransition("client.Receptionniste", 1000);

    }//GEN-LAST:event_homeActionPerformed

    private void gererbilanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gererbilanActionPerformed
    smoothTransition("client.Gérer_Bilan", 1000);
    }//GEN-LAST:event_gererbilanActionPerformed

    private void gerercaisseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerercaisseActionPerformed
        smoothTransition("client.Payement", 1000);
    }//GEN-LAST:event_gerercaisseActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ajouter_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ajouter_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ajouter_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ajouter_Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ajouter_Patient().setVisible(true);
            }
        });
    }
   private void loadPatientData() {
    DefaultTableModel model2 = new DefaultTableModel();
    String patientData = Client.fetchPatientData(); // Fetch data from server
    if (patientData == null) {
        System.out.println("Failed to receive data from the server.");
        return;
    }

    if (patientData.equals("No Patient found")) {
        System.out.println("No Patient found on the server.");
        return;
    }

    String[] patientEntries = patientData.split(";");
    for (String entry : patientEntries) {
        String[] dataParts = entry.split(":");
        System.out.println("767");
        if (dataParts.length == 7) {
            System.out.println("00000");
            System.out.println("id"+dataParts[0]);
            System.out.println(dataParts[5]);
            Object[] rowData = new Object[8];
            System.arraycopy(dataParts, 0, rowData, 0, 7);
            model.addRow(rowData);
        } else {
            System.out.println("Received patient data in an unexpected format: " + entry);
        }
    }
}


private void loadPatientDataQuandAjouter() {
   
    model.setRowCount(0);
    String patientData = Client.fetchPatientData(); // Fetch data from server
    if (patientData == null) {
        System.out.println("Failed to receive data from the server.");
        return;
    }

    if (patientData.equals("No Patient found")) {
        System.out.println("No Patient found on the server.");
        return;
    }

    String[] patientEntries = patientData.split(";");
    for (String entry : patientEntries) {
        String[] dataParts = entry.split(":");
        System.out.println("767");
        if (dataParts.length == 7) {
            System.out.println("00000");
            System.out.println("id"+dataParts[0]);
            System.out.println(dataParts[5]);
            Object[] rowData = new Object[8];
            System.arraycopy(dataParts, 0, rowData, 0, 7);
            model.addRow(rowData);
        } else {
            System.out.println("Received patient data in an unexpected format: " + entry);
        }
    }
}
  
     private void clearInputFields() {
    nom.setText("");
    prenom.setText("");
    date.setText("");
    sexe.setSelectedIndex(0); // Assuming the first item is the default
    email.setText("");
    Num.setText("");
   
}
     
     
private void smoothTransition(String windowName, int delayMilliseconds) {
    // Initialize the Timer outside the EventQueue.invokeLater call
    Timer timer = new Timer(delayMilliseconds, null);

    java.awt.EventQueue.invokeLater(() -> {
        try {
            // Dynamically create an instance of the specified window class
            Class<?> clazz = Class.forName(windowName);
            java.awt.Window window = (java.awt.Window) clazz.getDeclaredConstructor().newInstance();
            
            // Make the window visible
            window.setVisible(true);

            // Update the Timer's ActionListener here
            timer.addActionListener((e) -> {
                // Hide the current window after the delay
                setVisible(false);
                
                // Stop the Timer
                timer.stop();
            });

            // Start the Timer
            timer.start();
        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException ex) {
            // Handle any exceptions
            ex.printStackTrace();
        }
    });
}
    
    
private void smoothTransition(String windowName, int delayMilliseconds, Object... constructorArgs) {
    // Initialize the Timer outside the EventQueue.invokeLater call
    Timer timer = new Timer(delayMilliseconds, null);

    java.awt.EventQueue.invokeLater(() -> {
        try {
            // Dynamically create an instance of the specified window class
            Class<?> clazz = Class.forName(windowName);
            // Determine parameter types from constructorArgs
            Class<?>[] parameterTypes = new Class<?>[constructorArgs.length];
            for (int i = 0; i < constructorArgs.length; i++) {
                parameterTypes[i] = constructorArgs[i].getClass();
            }
            java.awt.Window window = (java.awt.Window) clazz.getDeclaredConstructor(parameterTypes).newInstance(constructorArgs);
            
            // Make the window visible
            window.setVisible(true);

            // Update the Timer's ActionListener here
            timer.addActionListener((e) -> {
                // Hide the current window after the delay
                setVisible(false);
                
                // Stop the Timer
                timer.stop();
            });

            // Start the Timer
            timer.start();
        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException ex) {
            // Handle any exceptions
            ex.printStackTrace();
        }
    });
}     
    

class CustomComboBoxUI extends BasicComboBoxUI {
    @Override
    protected JButton createArrowButton() {
        JButton button = new JButton();
        
        button.setBorder(BorderFactory.createLineBorder(Color.gray));  // Set the arrow button border color
        button.setBackground(Color.WHITE);
        return button;
    }
}

public class CustomComboBoxRenderer extends DefaultListCellRenderer {
    @Override
    public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        if (isSelected) {
            setBackground(new Color(213, 234, 255)); // Light blue background for selected item
            setForeground(Color.BLACK); // Black text
        } else {
            setBackground(Color.WHITE); // White background
            setForeground(Color.BLACK); // Black text
        }
        setFont(new Font("Segoe UI", Font.BOLD, 16)); // Set the font
        setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10)); // Add some padding
        return this;
    }
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Num;
    private javax.swing.JButton ajouter;
    private javax.swing.JButton colse;
    private javax.swing.JTextField date;
    private javax.swing.JTextField email;
    private javax.swing.JButton find;
    private javax.swing.JButton gererbilan;
    private javax.swing.JButton gerercaisse;
    private javax.swing.JButton gererdossier;
    private javax.swing.JButton gererpatients;
    private javax.swing.JButton gererrndv;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logout;
    private javax.swing.JButton minimize;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField nom;
    private javax.swing.JLabel obligatoire;
    private javax.swing.JLabel obligatoire1;
    private javax.swing.JLabel obligatoire2;
    private javax.swing.JLabel obligatoire3;
    private javax.swing.JLabel obligatoire4;
    private javax.swing.JLabel obligatoire5;
    private javax.swing.JTextField prenom;
    private javax.swing.JTextField rech;
    private javax.swing.JComboBox<String> sexe;
    private javax.swing.JButton supprimer;
    // End of variables declaration//GEN-END:variables
}
